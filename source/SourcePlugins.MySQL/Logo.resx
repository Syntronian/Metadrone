<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAABChJREFUWEfFV3lI
        k2Ectui0tAyvzA6vrLSZzi67IyKDLDAq7aADh5JtabbMe15l2TGd00/d5rcrnXmWllmy0sBgRVL/CBUE
        1R9GRf5TRPD2fMKGaOa3z2mDF759+/2e93nf3/XMzu5/f7ZeryVzEuR9s0WyPn6+nsxNkIfuLW1ePGG8
        mM3P1T2JBpFoh7Ml8iWpChIgUXdGyJviRAZj3LgTcRNTn8OuVB8zbxQua5Csv1JNvNOVDBFiF3tD4ZxU
        pgjJ020ZFzLOSaWHVuVpv4hqjfuZDXLvPZt5oLKFNz2+iIfNeStzNAdWX9L/nHGm+D0I9XgkV0yHzRSb
        kUlreuofXtzwximxtMBdXD7bDIz3PliW77H6R2KXpLKuRSmV5KTmQdNuWaO7zUgg/mGeyRWvTtBthWZQ
        gfYhFZyntXw3vw/K1epXSGiyQqKuwY242ozEcglN7SqqJ2ZAnHCtX0bVu6EbHKfb5kUpWhUB2Wriep5q
        tRmBnJZu6eLUyt83H72wN4PihH8tR+TA3JTGLhoV8xurYc3lWzNsQgQnMonrO01swUCkDKEjwXm6O8gR
        D7Z+I9rtkNYJ3UDCGqBdxfW0d5qSrCuoFljjN6KtX4bqq+fFCtZgCJPTnIQSyjGhxAQ/7zGTAIE9y7Lo
        flRGFFuwaOW9Y/D7cVjR+pGtz4h2yHD+9hu3CZKL9S0wYL4ZKsolibJUEWciCy9W8v0zq54jH0KtAUF5
        RswSyj6hIk5Z4zfMdlp8ER+L4gKyLKvK5JQotyqJh+2DDtiHeHIigKHmgnH+a2OhoYDLAQZ8Dla0EABZ
        CCTWPo7ATAhiC4gENqIq7kdSd7hpimhFK1mVq7UQ2HC1huwrbWZ9Ixhq/AVoTsuzaKuS2HJAJN8ZzP+B
        DSFIiibH3SRILtYE0JQc7YXFUsyW11BWfmxvzmLHJOEskUyPYeSAXmDC80+vVMUHNByLaBkNlJetiUJT
        6kc4viU3dHUCxwtt22E0v4Hfl2ZWeQdma0x75E2UT7rqrU+60jT/QrkAWoHCcmIFAiOUpQBYBnuhrD0M
        YYTmoJiuyco/JF8nYGQZ4kkiqbsm3EaQT5qyG880K4BBRgiDOzSE2Ddd1Q39SWPaCkfFOKq674FS3Baj
        ae9FHgw0JKghf0i33lGdRzCApvSPLL/by8vR9AM/kRXOYG3AOCCu9mjValbOQ4xQyu4ISwg/X3c0OF/3
        C7eajHe20RH/IoS8med4Vn4Eidix+ZqB7JTWM6OboN90g4AXl8NY5YMk5ENhM/K+Bs+iTYUGEcIqwu0G
        WgXE1XhfWTMfuUPQnN4wecAVh7MfpNqk09UdhwKz1T1TT0u/o5JeojwXcAYciyO6ZEboJT2jNYz4Gzjx
        t8GQh5qO21xo0G27ftuIkCway4E4+yL7XTDgQmO0D+v+APGuyTvbcpt8AAAAAElFTkSuQmCC
</value>
  </data>
</root>