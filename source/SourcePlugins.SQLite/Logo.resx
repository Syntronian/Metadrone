<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAA0VJREFUWEftlf1L
        U1EYx82pNcgkmdgLlQUGalCZzpc5nU6HSlipJUo/iS5Id92L2xTFJHB3dy/aUgs0UvCHpMLolyAKSgii
        fyLqD4j+hT5n7I4hhFvpiNjgcO6ee87zfXmec25WVuaXceB/dsAUHC+sU+w9LSH3VK1i767xj124+mAq
        Ny2aAbdUy9I6BFYv+0atzNaGgNNqDLi62sJenSBBXLtnZHoXZzR6/9jFK7JNqvZLS5U+W+1uySFp221N
        Uu9R1sqQISChdA4SP02hcYu6uTHoOiWe+5ZmD6sxQ8DRw56+pAB2LsLC7HrFoQek0RBwHqfGuvb5iVzA
        fdT5I9YWYn9BlSwZLPPeG7w/quZg31nA3cy3yHMgZQJsbgZgm/EVEJOaAPXPSDpGUg0kyhk3WXMwplyL
        2gHI9uPGpZRBxQYS5wB+tynoekl9v6P2jJoIazV0+QAErDhRrsYhoCE2ZAy6ZFw4/6fAWtQMQ+BkneLI
        R/VnkrbESOWhapjYCwg528KeAhWEPqggtkFD7tqMvyVW67frAftEsm8Q0PJcT10jTcHxQ1g+yHgHiA31
        TaiNnm9RV9Z1MyRsz05Z9fXItA5F4tJ4CAEXye/zPBJLLurbDfAX1sxwjLyQEXUtgkApo8Yc9lgoQ3PK
        wGIDalYAnAWkAvbRDkXJm9awJ88YcJYB+pqxQuwe4P2dC5PxLmZPS5Vse8T8Q++XtiEfP3JJk8HqEI3W
        kbgBS/Ox3U0t35I8APgcKo/Ez7PiqOL9c4itilPRsTAZ74OkgRMap4Akd1BfRtJO5nPY/Z4RZjzFHXNi
        UqzuJDbYPj9Zagq646ciZeCdG3BB1FlhfMBKD8q3UF6sruM0aCiXmbiD0tjNIXcbBI79NXDs0siNWi5L
        y9RSAWSN5op2Mw1XzP9Z4uvM8at2T4BFEoByAH6CuiFIbFb6RiUcuE0fnCDuo0desca4Z4CJiboiU0U0
        2mOD4jAAtAnQyLXItLhoOniuhkDDvgCLpM18TKjrFkAl1H0Re337BrYzMee5CNVb1Pc0wF5sXxMflLQR
        4BZb5kIpoe4TfGREw6UPXKiEQAjlwnZFfPHSplwFott7uXDa0w6cAcw48K848AvXGmBhLxGhgAAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>